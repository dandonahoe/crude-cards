# Use the official Node.js 20 image as the base for the build stage
FROM node:20-alpine AS builder

# Set the working directory inside the container to /app
WORKDIR /app

# Copy package.json and package-lock.json
# (from local) to the working directory (app)
COPY package.json ./
COPY pnpm-lock.yaml ./

# Copy the backend package and lock files
# Since it has a separate package.json.
# The backend codes base directory is /src/api
# COPY src/api/package.json ./src/api/package.json
# COPY src/api/pnpm-lock.yaml ./src/api/pnpm-lock.yaml

# Copy all other files to the working directory
RUN npx next telemetry disable
RUN npm install -g pnpm
RUN pnpm install --frozen-lockfile

# Copy all other files to the working directory
COPY . .
RUN pnpm run db:generate
RUN pnpm run build:frontend

# Copy all other files to the working directory

# Use the official Node.js 20 image as the base for the runtime stage
FROM node:20-alpine

# Set the working directory inside the container to /app
WORKDIR /app

# Copy built files from the builder stage to the current stage
COPY --from=builder /app .

RUN npm install -g pnpm

# Expose port 3000 to the outside world
EXPOSE 8080

# Set environment variable for the port
ENV PORT=8080

# todo - run multiple apps here?
# Command to run the application
CMD ["pnpm", "run", "start:frontend"]
